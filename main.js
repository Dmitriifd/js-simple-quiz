const questions = [
	{
		question: '–ö–∞–∫–æ–π —è–∑—ã–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ?',
		answers: ['Java', 'C', 'Python', 'JavaScript'],
		correct: 4,
	},
	{
		question: '–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç CSS?',
		answers: [
			'Central Style Sheets',
			'Cascading Style Sheets',
			'Cascading Simple Sheets',
			'Cars SUVs Sailboats',
		],
		correct: 2,
	},
	{
		question: '–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç HTML?',
		answers: [
			'Hypertext Markup Language',
			'Hypertext Markdown Language',
			'Hyperloop Machine Language',
			'Helicopters Terminals Motorboats Lamborginis',
		],
		correct: 1,
	},
	{
		question: '–í –∫–∞–∫–æ–º –≥–æ–¥—É –±—ã–ª —Å–æ–∑–¥–∞–Ω JavaScript?',
		answers: ['1996', '1995', '1994', '–≤—Å–µ –æ—Ç–≤–µ—Ç—ã –Ω–µ–≤–µ—Ä–Ω—ã–µ'],
		correct: 2,
	},
];

const headerContainer = document.querySelector('#header');
const listConrainer = document.querySelector('#list');
const submitBtn = document.querySelector('#submit');

let score = 0;
let questionIndex = 0;

clearPage();
showQuestion();
submitBtn.onclick = checkAnswer;

function clearPage() {
	headerContainer.innerHTML = '';
	listConrainer.innerHTML = '';
}

function showQuestion() {
	// –í–æ–ø—Ä–æ—Å
	const headerTemplate = `<h2 class="title">%title%</h2>`;
	const title = headerTemplate.replace(
		'%title%',
		questions[questionIndex]['question']
	);
	headerContainer.innerHTML = title;

	// –í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
	for ([index, answerText] of questions[questionIndex]['answers'].entries()) {
		const questionTemplate = `
            <li>
				<label>
					<input value="%number%" type="radio" class="answer" name="answer" />
					<span>%answer%</span>
				</label>
			</li>
        `;
		// let answerHTML = questionTemplate.replace('%answer%', answerText);
		// answerHTML = answerHTML.replace('%number%', index + 1)

		const answerHTML = questionTemplate
			.replace('%answer%', answerText)
			.replace('%number%', index + 1);
		listConrainer.innerHTML += answerHTML;
	}
}

function checkAnswer() {
	const checkedRadio = listConrainer.querySelector(
		'input[type="radio"]:checked'
	);

	// –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω - –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
	if (!checkedRadio) {
		submitBtn.blur();
		return;
	}

	// –£–∑–Ω–∞–µ–º –Ω–æ–º–µ—Ä –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	const userAnswer = +checkedRadio.value;

	// –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –≤–µ—Ä–µ–Ω - —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç
	if (userAnswer === questions[questionIndex]['correct']) {
		score++;
	}

	if (questionIndex !== questions.length - 1) {
		questionIndex++;
		clearPage();
		showQuestion();
	} else {
		clearPage();
		showResults();
	}
}

function showResults() {
	const resultsTemplate = `
        <h2 class="title">%title%</h2>
        <h3 class="summary">%message%</h3>
        <p class="result">%result%</p>
    `;
	let title, message;
	if (score === questions.length) {
		title = '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º  üëè';
		message = '–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –≤–µ—Ä–Ω–æ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã  üëç';
	} else if ((score * 100) / questions.length >= 50) {
		title = '–ù–µ–ø–ª–æ—Ö–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!';
		message = '–í—ã –¥–∞–ª–∏ –±–æ–ª–µ–µ –ø–æ–ª–æ–≤–∏–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤';
	} else {
		title = '–°—Ç–æ–∏—Ç –ø–æ—Å—Ç–æ—Ä–∞—Ç—å—Å—è';
		message = '–ü–æ–∫–∞ —É –≤–∞—Å –º–µ–Ω—å—à–µ –ø–æ–ª–æ–≤–∏–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤';
	}

	// –†–µ–∑—É–ª—å—Ç–∞—Ç
	let result = `${score} –∏–∑ ${questions.length}`;

    // –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç, –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —à–∞–±–ª–æ–Ω
	const finalMessage = resultsTemplate
		.replace('%title%', title)
		.replace('%message%', message)
		.replace('%result%', result);

	headerContainer.innerHTML = finalMessage;

    // –ú–µ–Ω—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ '–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ'
    submitBtn.blur();
    submitBtn.innerHTML = '–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ'
    submitBtn.onclick = () => history.go();
    console.log(history);
}
